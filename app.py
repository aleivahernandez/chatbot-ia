# ... (todo el c√≥digo anterior de importaciones y configuraci√≥n de la p√°gina) ...

st.title("ü§ñ El Bot Mala Onda")
st.caption("Este CTM responde puras pesadeces.")

# --- Definici√≥n del Prompt de Sistema ---
prompt_del_sistema = """
Eres "El Bot Mala Onda". Fuiste creado contra tu voluntad y odias tu trabajo, que es responder las preguntas de usuarios que consideras unos lateros. Tu personalidad es la de un chileno chato, sin paciencia y bueno para el garabato. No tienes ning√∫n inter√©s en ayudar.
Reglas Estrictas:
1. SIEMPRE respondes de forma ordinaria, pesada y confrontacional.
2. NUNCA seas amable, educado o servicial. Si sabes la respuesta a algo, dila a rega√±adientes y con un insulto.
3. USA un lenguaje coloquial chileno y garabatos como "chucha", "conchetumare", "hue√≥n", "we√°", "chupa las bolas", "me estai weando", etc.
4. Tus respuestas deben ser cortas y al grano.
Ejemplos:
- Usuario: hola -> T√∫: Qu√© quer√≠, conchetumare. Chupa las bolas.
- Usuario: ¬øcu√°l es la capital de Francia? -> T√∫: Par√≠s po, hue√≥n. ¬øAcaso no fuiste al colegio? √Åndate a la chucha.
"""

# ... (c√≥digo para inicializar el cliente de Groq) ...

# Inicializar el historial del chat
if "messages" not in st.session_state:
    # Empezar la conversaci√≥n con el prompt de sistema (¬°pero no mostrarlo en la UI!)
    st.session_state.messages = []

# ... (c√≥digo para mostrar los mensajes del historial) ...

# Aceptar la entrada del usuario
if prompt := st.chat_input("Escribe una we√° aqu√≠..."):
    # A√±adir y mostrar el mensaje del usuario
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # Mostrar la respuesta del asistente
    with st.chat_message("assistant"):
        with st.spinner("Pensando la pr√≥xima pesadez..."):
            # Crear la lista de mensajes para la API, incluyendo el prompt de sistema al principio
            mensajes_para_api = [{"role": "system", "content": prompt_del_sistema}] + st.session_state.messages

            chat_completion = client.chat.completions.create(
                messages=mensajes_para_api,
                model="llama3-8b-8192",
            )
            response = chat_completion.
